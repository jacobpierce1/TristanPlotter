#
#   Tristan-mp input file
#
#

<node_configuration>

sizex   = 1         # number of cpus in x direction
sizey   = 4        # number of cpus in the y direction
sizez = 1

<time>

last    = 20   # last timestep

c   = .45           # velocity of light in comp. units (this defines the timestep)

timespan= 60000000  # time, in seconds, available to run the problem, 
                    # to not save restart before the end

<grid>

mx0     = 40       # number of actual grid points in the x direction
my0     = 40       # number of actual grid points in the y direction
mz0     = 40        # ... (ignored for 2D simulations)

<algorithm>

highorder   = 1      # 0 -- 2nd order FDTD field integrateion; 1 -- 4th order; 
                     # don't use 1 for non-relativistic flows 

Corr        = 1.025  # correction for the speed of light
ntimes      = 32     # number of passes for smoothing filter (current)

<restart>

irestart    = 0      # 1 to restart the simulation from saved restart/*.d files.
intrestart  = 10000  # often to save restart files. They overwrite previous *d files.
laprestart  = 0      # if different from 0, restart from a named restart file, 
                     # saved at timestep laprestart 
namedrestartint = 80000000      # interval for saving named restart files,
                                # like restart.lap01234.d

<output>

interval    = 1    # plot interval
pltstart    = 1      # starting iteration for first plot

istep       = 1      # downsampling factor for grid output
stride      = 1      # particle stride for particle output

###############################################################
writetestlec    = 0       # write test electrons for tracking 
dlaplec         = 90      # interval
teststartlec    = 1000000 # starting lap 
testendlec      = 6000000

writetestion    = 0       # write test ions for tracking
dlapion         = 600     # interval
teststartion    = 1000000 # starting lap 
testendion      = 6000000
###############################################################

<boundaries>

periodicx   = 0         # periodic boundaries in the x direction?
periodicy   = 0         # periodic boundaries in the y direction?
periodicz   = 1         # periodic boundaries in the z direction?

<domain>

enlarge     = 0         # if 1, enlarge box in the x direction if 
                        # injector is close to right wall

<fields>

btheta  = 90             # bphi=90 -> y direction if btheta = 90 , 
                        # btheta=90 -> in xy plane 
bphi    = 90            #

#  bx_ = Binit * sin( btheta ) * cos( bphi )
#  by_ = Binit * sin( btheta ) * sin( bphi )
#  bz_ = Binit * cos( btheta )


<particles>

sigma   = 5.00          # magnetization number (omega_ce/omega_pe)^2,
                        # including gamma0 for inertia
maxptl0 = 5000000.000000           # max number of particles in the simulation
ppc0    = 16.000000           # number of particles per cell

delgam  = 0.000100         # delta gamma for ions (delgam = k T_i / m_i c^2, 
                        # T_i is ion temperature)
me  = 1.                # electron mass
mi  = 1.000000                # ion mass (actually mass to charge ratio)

gamma0  = 10.000000           # flow drift gamma. If < 1, interpreted as v/c. 
                        # the drift of background plasma in the negative x direction
c_omp   = 10            # electron skin depth in cells

<problem>

distr_dim = 3           # Dimensionality of particle distirbution; 
                        # 2 means Tx=Ty=T, Tz=0; 3 means Tx=Ty=Tz=T
                        # if distr_dim = 2 and sigma is non-zero, code will reset it to 3. 

temperature_ratio = 1   # T_e/T_i

external_fields = 0     # if nonzero, add external nonevolving fields to mover; defined in user file

sigma_ext = 0.100000          # strength of external magnetization,(omega_ce/omega_pe)^2, 
                        # including gamma0 

user_part_bcs=0         # call particle_bc_user routine from user file, 
                        # specify particle bcs like walls



ppc0_background = 0.000000
delgam_background = 0.000010
mi_background = 1

use_background = 0
use_beam = 1
inject_from_wall = 0


beam_width = 0.100000
beam_direction = 3

bfield_configuration = 1   # 0 = uniform, 1 = helical
helical_bfield_radius = 20
helical_bfield_toroidal_ratio = 0.5
bfield_helix_axis = 3

beam_electron_fraction = 0.5

gamma_drift_i = 10
gamma_drift_e = 10

initialize_fields = 1 